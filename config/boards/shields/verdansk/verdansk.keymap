#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Mac_0 {
            // ---------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  \   |
            // | CAPS |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | APOS |
            // | CTRL | ALT | GUI | SPC | SPC | SPC |     | SPC | LOW |LARW |DARW |UARW | RARW |

            bindings = <
&kp GRAVE   &kp F1            &kp F2        &kp F3        &kp F4  &kp F5       &kp F6     &kp F7  &kp F8     &kp N9    &kp N0    &kp DELETE
&kp TAB     &kp Q             &kp W         &kp E         &kp R   &kp T        &kp Y      &kp U   &kp I      &kp O     &kp P     &kp BACKSPACE
&kp CAPS    &kp A             &kp S         &kp D         &kp F   &kp G        &kp H      &kp J   &kp K      &kp L     &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT   &kp Z             &kp X         &kp C         &kp V   &kp B        &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp APOS
&kp K_MUTE  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_WIN  &mo 1   &kp ENTER    &kp SPACE  &mo 2   &kp LARW   &kp DARW  &kp UARW  &kp RARW
            >;
        };

        Mac_num_arrow {
            bindings = <
&trans     &trans  &trans  &trans         &trans        &trans       &trans     &trans    &trans    &trans     &trans        &trans
&kp ESC    &kp N1  &kp N2  &kp N3         &kp N4        &kp N5       &kp N6     &kp N7    &kp N8    &kp N9     &kp N0        &kp BSPC
&kp LCTRL  &trans  &trans  &kp LC(F11)    &kp LC(DOWN)  &trans       &trans     &trans    &kp UP    &trans     &trans        &kp DEL
&kp LSHFT  &trans  &trans  &kp PAGE_DOWN  &kp PAGE_UP   &kp END      &trans     &kp LEFT  &kp DOWN  &kp RIGHT  &kp C_VOL_DN  &kp C_VOL_UP
&trans     &trans  &trans  &kp LGUI       &trans        &kp ENTER    &kp SPACE  &trans    &kp LALT  &trans     &trans        &trans
            >;
        };

        Mac_symbols {
            bindings = <
&trans     &trans           &trans       &trans    &trans      &trans         &trans        &trans         &trans          &trans                &trans                 &trans
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&kp LCTRL  &trans           &trans       &trans    &trans      &trans         &kp MINUS     &kp EQUAL      &kp LBKT        &kp RBKT              &kp BSLH               &kp GRAVE
&kp LSHFT  &trans           &trans       &trans    &trans      &trans         &kp KP_MINUS  &kp PLUS       &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
&trans     &trans           &trans       &kp LGUI  &trans      &kp ENTER      &kp SPACE     &trans         &kp LALT        &trans                &trans                 &kp MINUS
            >;
        };

        Mac_numpad {
            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4    &trans         &trans  &trans  &trans  &trans           &trans
&trans      &trans        &trans        &trans            &trans        &trans          &kp KP_DIVIDE  &kp N7  &kp N8  &kp N9  &kp KP_ASTERISK  &kp BACKSPACE
&trans      &trans        &trans        &trans            &trans        &trans          &kp MINUS      &kp N4  &kp N5  &kp N6  &kp PLUS         &kp DELETE
&trans      &trans        &trans        &trans            &trans        &trans          &kp N0         &kp N1  &kp N2  &kp N3  &kp EQUAL        &trans
&bt BT_CLR  &trans        &trans        &kp LEFT_COMMAND  &trans        &kp ENTER       &kp SPACE      &trans  &kp N0  &trans  &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        numpad_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

